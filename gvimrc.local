"czcionka
"set guifont=Inconsolata-dz\ for\ Powerline\ Medium\ 13
set guifont=Inconsolata-g\ for\ Powerline\ Medium\ 13
"set guifont=PowerlineSymbols\ Medium\ 13

if exists("quake_gvim")
    " Mapowanie zmiany rozmiarów okna
    nnoremap <F3> :call ToggleWindowSize(2)<CR>
    nnoremap <S-F3> :call ToggleWindowSize(1)<CR>
    nnoremap <C-F3> :call ToggleWindowSize(0)<CR>
    imap <F3> <C-O><F3>
    imap <S-F3> <C-O><S-F3>
    imap <C-F3> <C-O><C-F3>

    nnoremap <F4> <ESC>
    imap <F4> <ESC>
    winpos 0 0
    set columns=90
    set lines=15
    set go-=m
    set go-=T
    set go-=r
    set go-=L
    set go-=l
    set go-=b
    set go+=c
endif

" funkcje

" Zmiana rozmiarów okna toggle
function ToggleWindowSize(act)
  if a:act < 0 || a:act > 2 | return | endif
  let posX = getwinposx()
  let posY = getwinposy()
  let actTab = "XXX__X_XR__XX_X__RRRR__R"
  let idx = ((exists("g:twsWM") + exists("g:twsHM") * 2) * 3 + a:act) * 2
  let actW = strpart(actTab, idx, 1)
  let actH = strpart(actTab, idx + 1, 1)
  " note. g:tws + [Width,Height,X,Y] + [Maximized,Saved]
  if actW == "X"
    let g:twsWS = &columns | let g:twsXS = posX
    set columns=999
    let posX = getwinposx()
    let g:twsWM = &columns | let g:twsXM = posX
  elseif actW == "R"
    if g:twsWM == &columns
      let &columns = g:twsWS
      if g:twsXM == posX | let posX = g:twsXS | endif
    endif
    unlet g:twsWM g:twsWS g:twsXM g:twsXS
  endif
  if actH == "X"
    let g:twsHS = &lines | let g:twsYS = posY
    set lines=999
    let posY = getwinposy()
    let g:twsHM = &lines | let g:twsYM = posY
  elseif actH == "R"
    if g:twsHM == &lines
      let &lines = g:twsHS
      if g:twsYM == posY | let posY = g:twsYS | endif
    endif
    unlet g:twsHM g:twsHS g:twsYM g:twsYS
  endif
  execute "winpos " . posX . " " . posY
endfunction
